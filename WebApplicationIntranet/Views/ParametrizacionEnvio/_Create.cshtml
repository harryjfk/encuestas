@model Entity.ParametrizacionEnvio
@{
    Layout = "";
    var cont = 0;
}
@using (Html.BeginForm("Create", "Parametrización de Envío", FormMethod.Post, new { name = "Pa-635744606616650796" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        <div id="errors-container" class="alert alert-danger animated bounceIn hidden">
            <strong>Alertas</strong>
            <div>
                <ul></ul>
            </div>
        </div>



        @if (Model != null)
        {
            @Html.HiddenFor(t => t.tipo_encuesta);
            @Html.HiddenFor(t => t.frecuencia);
            <input type="hidden" name="Id" value="@Model.Id" />
            
        }

        <div class="form-group">
            <label for="tipo_encuesta" class="col-md-4 control-label"> Tipo de Encuesta</label>
            <div class="col-md-7">
                @Html.Label(Model.tipo_encuesta, new { @class = "form-control" })
               
            </div>
           
        </div>
       
        <div class="form-group">
            <label for="tipo_encuesta" class="col-md-4 control-label"> Frecuencia</label>
            <div class="col-md-7">
                @foreach (var item in Model.FrecuenciaDic())
                {
                    var check = item.Value ? "checked='checked'" : "";
                    <div class="col-md-4">
                        <div>
                            <input class="frec" type="checkbox" value="@item.Key" @check />
                            <span>@item.Key</span>
                        </div>
                    </div>
                    cont++;
                }
            </div>
            </div>

            <div class="form-group">
                <label for="mensaje" class="col-md-4 control-label"> Mensaje</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(t => t.mensaje, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.mensaje)
                </div>
                <div class="col-md-1 txt-color-red"><span>(*)</span></div>
            </div>

            <div class="form-group">
                <label for="comienzo" class="col-md-4 control-label"> Comienzo</label>
                <div class="col-md-7">
                    <input type="text" value="@Model.comienzo.ToString("dd-MM-yyyy")" class="form-control" name="Comienzo" id="datetimepicker1" />
                    <span class="input-group-addon input-group-addon-datetimepicker">
                        <span style="margin-top: 2px;" class="fa fa-calendar"></span>
                    </span>

                </div>
                <div class="col-md-1 txt-color-red"><span>(*)</span></div>
            </div>

            <div class="form-group">
                <label for="envio_1" class="col-md-4 control-label"> Env&iacute;o 1</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(t => t.envio_1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.envio_1)
                </div>
                <div class="col-md-1 txt-color-red"><span>(*)</span></div>
            </div>

            <div class="form-group">
                <label for="envio_2" class="col-md-4 control-label"> Env&iacute;o 2</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(t => t.envio_2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.envio_2)
                </div>
                <div class="col-md-1 txt-color-red"><span>(*)</span></div>
            </div>
            <div class="form-group">
                <label  class="col-md-4 control-label">Enviar correo si no se ha llenado encuesta</label>
                <div class="col-md-1">
                    @Html.CheckBoxFor(t => t.Activado, new { @class = "form-control check-small" })
                    
                </div>
            </div>


            <div class="modal-footer">
                <button type="button" name="aceptarbtn" class="btn btn-primary" value="Aceptar">Aceptar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>

        </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $(".frec").each(function(i, e) {
            var elem = $(e);
           
            elem.change(function (h) {
                var res = "";
                $(".frec").each(function(i1,e1) {
                    if (e1.checked) {
                        res += " " + $(e1).val();
                    }
                });
                res = res.trim();
                $("#frecuencia").val(res);
            });
        });
        $("button[name='aceptarbtn']").click(function () {
            var $elem = $(this);
            $elem.addClass("disabled");
            //console.log($("form[name='Pa-635744606616650796']").serialize());
            $.ajax({
                cache: false,
                type: "POST",
                url: $.origin() + "/ParametrizacionEnvio/CreatePost/",
                data: $("form[name='Pa-635744606616650796']").serialize(),
                success: function (data) {
                    $elem.removeClass("disabled");
                    if (data.Success) {
                        $("#table-container").html(data.Data);
                        $("#editItem").modal("hide");
                        $.smallBox({
                            title: "Confirmación",
                            content: "<i class='fa fa-clock-o'></i> <i>El elemento se guardó correctamente</i>",
                            color: "#659265",
                            iconSmall: "fa fa-check fa-2x fadeInRight animated",
                            timeout: 4000
                        });
                    } else {
                        var errors = "";
                        for (var i = 0; i < data.Errors.length; i++) {
                            errors += "<li>" + data.Errors[i] + "</li>";
                        }
                        $("#errors-container").removeClass("hidden").find("ul").html(errors);
                    }
                    //$("#editItem .modal-body").html(data);
                    //$("#editItem").modal("show");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $elem.removeClass("disabled");
                    alert('Failed to retrieve data.');
                    //console.log(arguments);
                }
            });

        });
        $('#Nombre').maxlength({ events: ['blur'], slider: true, maxCharacters: 50, statusText: 'caracteres restantes' });

        $('#datetimepicker1').datepicker({
            pickTime: false,
            language: "es",
            dateFormat: 'dd-mm-yy'
        });


        $("input[name='tipo']").change(function () {
            var selectedValue = $("input[name='tipo']:checked").val();
            if (selectedValue == "permanente") {
                $("#temporal-dates-container").addClass("hidden");
                $("#datetimepicker1").attr("name", "ComienzaTemp");
                $("#Intervalo").attr("name", "IntervaloTemp");
            }
            else {
                $("#temporal-dates-container").removeClass("hidden");
                $("#datetimepicker1").attr("name", "Comienza");
                $("#Intervalo").attr("name", "Intervalo");
            }
        });
        
    })
</script>
