@using Entity
@using PagedList.Mvc
@model Domain.Query<Entity.Establecimiento>
@*@using (Html.BeginForm("BuscarEstablecimientosNoAsignados", "UsuarioIntranet", FormMethod.Post,new{id="formSearchEstNoAsig",name="formSearch"}))
    {
        <div class="panel panel-primary">
            <div class="panel-heading">B&Uacute;SQUEDA</div>

            <div class="panel-body">
                <div class="row">
                    <div class="col-md-8">
                        <div class="input-group">
                            <span class="input-group-addon">RAZ&Oacute;N SOCIAL</span>
                            @*<input type="text" class="form-control">*@
@*@Html.TextBoxFor(t => t.Criteria.Nombre, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-4">
                <input type="button" value="Buscar" name="buscarbtn" class="btn btn-default send" />
            </div>
        </div>
    </div>*@


@*</div>
    }*@

<form id="frm-search" autocomplete="off">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading">B&uacute;squeda</div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="input-group">
                                <span class="input-group-addon">Raz.</span>
                                @Html.TextBoxFor(t => t.Criteria.Nombre, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="input-group">
                                <span class="input-group-addon">ID</span>
                                @Html.TextBoxFor(t => t.Criteria.IdentificadorInterno, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="input-group">
                                <span class="input-group-addon">RUC</span>
                                @Html.TextBoxFor(t => t.Criteria.Ruc, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <input type="submit" value="Buscar" id="btn-buscar" name="btn-buscar" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<table class="table table-striped table-hover table-bordered table-condensed tabla small">
    <thead>
        <tr class="cabecera">
            <th>Raz&oacute;n Social</th>
            <th>RUC</th>
            <th>CIIU</th>
            <th style="width: 100px">&Oacute;rden</th>
            <th>Acci&oacute;n</th>
    </thead>

    <tbody>
        @foreach (var item in Model.Elements)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                <td>@Html.DisplayFor(modelItem => item.Ruc)</td>
                <td>@{Html.RenderAction("GetCiiuAsignarAnalista", "Establecimiento", new { nombre = "ciiu_" + item.Id, IdEstablecimiento = item.Id });}</td>
                <td>@{Html.RenderAction("GetOrden", "Establecimiento", new { nombre = "orden_" + item.Id, IdEstablecimiento = item.Id });}</td>
                <td>
                    <a href="javascript:void(0);" data-toggle="tooltip" data-placement="top" title="" data-original-title="Asignar" id="edit-@item.Id" role="@item.Id" class="asign-btn">
                        <i class="color-black glyphicon glyphicon-ok"></i>
                    </a>
                </td>
            </tr>
                    }
    </tbody>
</table>

    @if (Model.Elements.Count == 0)
    {
        <div class="no-elements-notification">
            No hay elementos para mostrar
        </div>
    }
    @Html.PagedListPager(Model.Elements, page => Url.Action("PageEstablecimientosNoAsignados", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)


    <script type="text/javascript">
        $(document).ready(function () {
            $(".asign-btn").click(function () {
                var $elem = $(this);
                var id = $elem.attr("role");
                var idCiiu = $('#ciiu_' + id).val();
                var orden = $('#orden_' + id).val();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: $.origin() + "/UsuarioIntranet/AsignarEstablecimiento/",
                    data: { "id": id, "idCiiu": idCiiu, "orden": orden },
                    success: function (data) {
                        if (data.Success) {
                            $("#editItem .modal-body").html(data.NoAsignados);
                            $("#table-container").html(data.Asignados);
                        } else {

                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve data.');
                    }
                });

            });
            $(".modal-body div .pagination li a").each(function (i, e) {
                var url = $(e).attr('href');
                $(e).attr('href', "javascript:void(0);");
                $(e).on('click', function () {
                    goToPage(url);
                });
            });
            var pag = $(".modal-body .pagination-container");
            pag.removeClass("pagination-container");
            $("#formSearchEstNoAsig .send").click(function () {
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: $.origin() + "/UsuarioIntranet/AsignarEstablecimiento/",
                    data: { "criteria": $("form[name='formSearch']").serialize() },
                    success: function (data) {
                        if (data.Success) {
                            $("#editItem .modal-body").html(data)

                        } else {

                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve data.');
                    }
                });
            });
            
            $.InitTooltip();
        });
        function goToPage(url) {
            if (url) {
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: url,
                    //data: { "idLineaProducto": id },
                    success: function (data) {
                        $("#editItem .modal-body").html(data);
                        //$("#unidadesMedida").modal("show");
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve data.');
                        console.log(xhr);
                    }
                });
            }
        }

        $("#btn-buscar").on('click', function (e) {
            e.preventDefault();

            $.ajax({
                cache: false,
                type: "GET",
                data: $('#frm-search').serialize(),
                url: $.origin() + "/UsuarioIntranet/BuscarEstablecimientosNoAsignados/",
                success: function (data) {
                    $("#editItem .modal-body").html(data);                    
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                    console.log(xhr);
                }
            });
        });
    </script>


