@model Entity.EncuestaEstadistica

@*@using (Html.BeginForm("Buscar", "EncuestaEstadistica", FormMethod.Post,new{name="cap1form"}))
    {*@

<div class="panel panel-primary">
    <div class="panel-heading">Capítulo I: Identificación del establecimiento</div>
    @Html.HiddenFor(t => t.IdEstablecimiento)
    <div class="panel-body">
        @*@if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger fade in">
                    <button class="close" data-dismiss="alert">×</button>
                    <strong>Alertas</strong>
                    <div>
                        @Html.ValidationSummary(false)
                    </div>
                </div>

            }*@
        @if (Model != null)
        {
            @Html.HiddenFor(t => t.Informante.Apellidos)
            @Html.HiddenFor(t => t.Informante.Identificador)
            @Html.HiddenFor(t => t.IdInformante)
            <div>
                <div>
                    <div class="col-md-6 ">
                        <div class="input-group padding-5">
                            <span class="input-group-addon">Razón Social</span>
                           @if (string.IsNullOrEmpty(Model.Establecimiento.RazonSocial))
                           {
                               <span class="form-control">Sin Establecer</span>
                           }
                           else
                           {
                                @Html.Label("", Model.Establecimiento.RazonSocial, new { @class = "form-control reset-max-width" })
                           }
                        </div>
                        <div class="input-group padding-5">
                            <span class="input-group-addon">Identificador</span>
                            @Html.Label("", Model.Establecimiento.IdentificadorInterno, new { @class = "form-control reset-max-width" })
                        </div>
                        <div class="input-group padding-5">
                            <span class="input-group-addon">Dirección</span>
                            @Html.Label("", Model.Establecimiento.Direccion, new { @class = "form-control reset-max-width" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="input-group padding-5">
                            <span class="input-group-addon">RUC</span>
                            @Html.Label("", Model.Establecimiento.Ruc, new { @class = "form-control reset-max-width" })
                        </div>
                        <div class="input-group padding-5">
                            <span class="input-group-addon">Nombre</span>
                            @Html.Label("", Model.Establecimiento.Nombre, new { @class = "form-control reset-max-width" })
                        </div>
                        <div class="input-group padding-5">
                            <span class="input-group-addon">Teléfono</span>
                            @Html.Label("", Model.Establecimiento.Telefono, new { @class = "form-control reset-max-width" })
                        </div>
                    </div>
                </div>
                <div>
                    <div class="col-md-4">
                        <div class="input-group padding-5">
                            <span class="input-group-addon">Departamento</span>
                            @{Html.RenderAction("GetNombreDepartamento", new { idDepartamento = Model.Establecimiento.IdDepartamento });}
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="input-group padding-5">
                            <span class="input-group-addon">Provincia</span>
                            @{Html.RenderAction("GetNombreProvincia", new { idProvincia = Model.Establecimiento.IdProvincia });}
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="input-group padding-5">
                            <span class="input-group-addon">Distrito</span>
                            @{Html.RenderAction("GetNombreDistrito", new { idDistrito = Model.Establecimiento.IdDistrito });}
                        </div>
                    </div>
                </div>
            </div>
            <h4 class="label label-primary">Datos del informante </h4>
            <a href="javascript:void(0);" data-establecimiento="@Model.Establecimiento.Id" class="btn-xs btn-success" id="btnNewContact" style="margin-left: 5px;">Cambiar Informante</a>
           
            <div id="divContacto" style="margin-top: 5px;display: none;">
                
            </div>
             <div>

                <div class="col-md-6">
                    <div class="input-group padding-5">
                        <span class="input-group-addon">Nombre</span>
                        @if (Model.Establecimiento.ContactoPredeterminado != null && Model.Establecimiento.ContactoPredeterminado.Nombre != null)
                        {
                            <input type="text" class="form-control reset-max-width" value="@Model.Establecimiento.ContactoPredeterminado.Nombre" name="Establecimiento.ContactoTemporal.Nombre" />
                        }
                        else
                        {
                            <input type="text" class="form-control reset-max-width" value="" name="Establecimiento.ContactoTemporal.Nombre" />
                        }
                    </div>
                    <div class="input-group padding-5">
                        <span class="input-group-addon">Cargo</span>
                        @if (Model.Establecimiento.ContactoPredeterminado != null)
                        {
                            Html.RenderAction("GetDorpDown", "Cargo", new { id = (Model != null && Model.Informante != null) ? Model.Establecimiento.ContactoPredeterminado.IdCargo : 0, nombre = "Establecimiento.ContactoTemporal.IdCargo" });
                        }
                    </div>
                    <div class="input-group padding-5">
                        <span class="input-group-addon">Teléfono</span>
                        @if (Model.Establecimiento.ContactoPredeterminado != null && Model.Establecimiento.ContactoPredeterminado.Telefono != null)
                        {
                            <input type="text" class="form-control reset-max-width" value="@Model.Establecimiento.ContactoPredeterminado.Telefono" name="Establecimiento.ContactoTemporal.Telefono" />
                        }
                        else
                        {
                            <input type="text" class="form-control reset-max-width" value="" name="Establecimiento.ContactoTemporal.Telefono" />
                        }
                    </div>
                    
                </div>
                <div class="col-md-6">
                    <div class="input-group padding-5">
                        <span class="input-group-addon">Anexo</span>
                        @if (Model.Establecimiento.ContactoPredeterminado != null && Model.Establecimiento.ContactoPredeterminado.Anexo != null)
                        {
                            <input type="text" class="form-control reset-max-width" value="@Model.Establecimiento.ContactoPredeterminado.Anexo" name="Establecimiento.ContactoTemporal.Anexo" />
                        }
                        else
                        {
                            <input type="text" class="form-control reset-max-width" value="" name="Establecimiento.ContactoTemporal.Anexo" />
                        }
                    </div>
                    <div class="input-group padding-5">
                        <span class="input-group-addon">Celular</span>
                        @if (Model.Establecimiento.ContactoPredeterminado != null && Model.Establecimiento.ContactoPredeterminado.Celular != null)
                        {
                            <input type="text" class="form-control reset-max-width" value="@Model.Establecimiento.ContactoPredeterminado.Celular" name="Establecimiento.ContactoTemporal.Celular" />
                        }
                        else
                        {
                            <input type="text" class="form-control reset-max-width" value="" name="Establecimiento.ContactoTemporal.Celular" />
                        }
                    </div>
                    <div class="input-group padding-5">
                        <span class="input-group-addon">Correo</span>
                        @if (Model.Establecimiento.ContactoPredeterminado != null && Model.Establecimiento.ContactoPredeterminado.Correo != null)
                        {
                            <input type="text" class="form-control reset-max-width" value="@Model.Establecimiento.ContactoPredeterminado.Correo" name="Establecimiento.ContactoTemporal.Correo" />
                        }
                        else
                        {
                            <input type="text" class="form-control reset-max-width" value="" name="Establecimiento.ContactoTemporal.Correo" />
                        }
                    </div>
                </div>



                </div>
         <div class="pull-right">
            <a href="javascript:void(0);" id="edit-btnIE" data-toggle="tooltip" data-placement="top" title="" data-original-title="Guardar" class="btn btn-primary">Guardar</a>
        </div>
        }
    </div>
</div>
@*}*@

@*MODALS*@
<div class="modal fade" id="newContact" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Contactos</h4>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#btnNewContact").click(function () {
            var $elem = $(this);
            var establecimiento=$elem.attr("data-establecimiento");
            $.ajax({
                cache: false,
                type: "GET",
                url: window.location.origin + "/EncuestaEstadistica/ContactosEncuesta/",
                data: { "id": establecimiento },
                success: function (data) {
                    $("#divContacto").html(data);
                    $("#divContacto").toggle();
                    //$("#newContact").find(".modal-title").html("Posibles respuestas a la pregunta " + name);
                    //$("#newContact").modal("show");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                }
            });

        });
        $("#edit-btnIE").click(function (e) {
            var encuesta = $("form[name='encuestaEstadisticaForm']").serialize();
            $.ajax({
                cache: false,
                //dataType: "json",
                type: "POST",
                //contentType: "application/json",
                url: $.origin() + "/EncuestaEstadistica/SaveInformante/",
                data:  encuesta ,
                success: function (data) {
                    if (data.Success) {
                        $.smallBox({
                            title: "Confirmación",
                            content: "<i class='fa fa-clock-o'></i> <i>Se han guardado los cambios satisfactoriamente</i>",
                            color: "#659265",
                            iconSmall: "fa fa-check fa-2x fadeInRight animated",
                            timeout: 4000
                        });
                    } else {
                        $.smallBox({
                            title: "Error",
                            content: "<i class='fa fa-clock-o'></i> <i>" + data.Errors[0] + "</i>",
                            color: "#C46A69",
                            iconSmall: "fa fa-check fa-2x fadeInRight animated",
                            timeout: 4000
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                }
            });
            e.preventDefault();
        });
    })
</script>
