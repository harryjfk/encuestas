@model Entity.LineaProductoEstablecimiento
@{
    Layout = "";
}
@using (Html.BeginForm("Create", "LineaProductoEstablecimiento", FormMethod.Post, new { name = "addform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        <div id="errors-container" class="alert alert-danger animated bounceIn hidden">
            <strong>Alertas</strong>
            <div>
                <ul></ul>
            </div>
        </div>

        

        @if (Model != null && Model.Id!=0)
        {
            <input type="hidden" name="Id" value="@Model.Id" />
            <input type="hidden" id="isNew" value="false" />
        }
        else
        {
            <input type="hidden" id="isNew" value="true" />
        }
        <div class="form-group">
            <label for="CIIU" class="col-md-4 control-label">CIIU</label>
            <div class="col-md-7">
                @if (Model == null || Model.Id == 0)
                {
                    Html.RenderAction("GetDorpDownCiiu", "LineaProductoEstablecimiento", new { nombre = "IdCIIU" });

                }
                else
                {
                    @Html.HiddenFor(t => t.IdLineaProducto)
                    @Html.Label("", Model.LineaProducto.Ciiu.Nombre, new { @class = "form-control", style = "width:280px; height: inherit;" })
                }

                @Html.ValidationMessageFor(model => model.IdLineaProducto)
            </div>
        </div>
        <div class="form-group">
            <label for="LineaProducto" class="col-md-4 control-label">L&iacute;nea de Producto</label>
            <div class="col-md-7">
                @if (Model == null || Model.Id == 0)
                {
                    //Html.RenderAction("GetDorpDownLineaProducto", "LineaProductoEstablecimiento", new { id = (Model != null && Model.IdLineaProducto != null) ? Model.IdLineaProducto : 0, nombre = "IdLineaProducto" });
                    <div id="idLineaProdDiv"></div>

                }
                else
                {
                    @Html.HiddenFor(t=>t.IdLineaProducto)
                    @Html.Label("", Model.LineaProducto.Nombre, new { @class = "form-control", style = "width:280px;height: inherit;" })
                }

                @Html.ValidationMessageFor(model => model.IdLineaProducto)
            </div>
            @if (Model == null || Model.Id == 0)
            {
                <div class="col-md-1 txt-color-red"><span >(*)</span></div>
            }
        </div>
        <div class="form-group">
            <label for="Peso" class="col-md-4 control-label">Peso</label>
            <div class="col-md-7">
                <span style="max-width: 280px;" class="form-control">@Model.peso.GetValueOrDefault()</span>
             
            </div>
            </div>
            <div class="modal-footer">
                <button type="button" name="aceptarbtn" class="btn btn-primary" value="Aceptar">Aceptar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $("button[name='aceptarbtn']").click(function () {
            var $elem = $(this);
            $elem.addClass("disabled");
            $.ajax({
                cache: false,
                type: "POST",
                url: $.origin() + "/LineaProductoEstablecimiento/CreatePost/",
                data: $("form[name='addform']").serialize(),
                success: function (data) {
                    $elem.removeClass("disabled");
                    if (data.Success) {
                        $("#table-container").html(data.Data);
                        $("#editItem").modal("hide");
                        $.smallBox({
                            title: "Confirmación",
                            content: "<i class='fa fa-clock-o'></i> <i>El elemento se guardó correctamente</i>",
                            color: "#659265",
                            iconSmall: "fa fa-check fa-2x fadeInRight animated",
                            timeout: 4000
                        });
                    } else {
                        var errors = "";
                        for (var i = 0; i < data.Errors.length; i++) {
                            errors += "<li>" + data.Errors[i] + "</li>";
                        }
                        $("#errors-container").removeClass("hidden").find("ul").html(errors);
                    }
                    //$("#editItem .modal-body").html(data);
                    //$("#editItem").modal("show");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $elem.removeClass("disabled");
                    alert('Failed to retrieve data.');
                }
            });

        });
        $('#IdCIIU').on("change", function () {
            loadLineaProducto();
        });
        if ($("#isNew").val()=='true') {
        setTimeout(function () {
            //$("#IdCIIU").chosen({ disable_search_threshold: 10, no_results_text: "No se encontraron coincidencias con " });
            //$("div[class*='chosen-container chosen-container-single']").addClass("form-control");
            //var a = $("a[class*='chosen-single']");
            //if (a != null) {
            //    a.css("border", "0");
            //    a.css("background", "white");
            //    a.css("box-shadow", "0 0 0 white inset,0 0 0 rgba(0,0,0,.1)");
            //}
            loadLineaProducto();
            }, 500);
         }   

        function loadLineaProducto() {
            var idCiiu = $("#IdCIIU").val();
            $.ajax({
                cache: false,
                type: "POST",
                url: $.origin() + "/LineaProductoEstablecimiento/GetDorpDownLineaProducto/",
                data: {
                    idCiiu: idCiiu,
                    nombre: "IdLineaProducto"
                },
                success: function (data) {
                    $("#idLineaProdDiv").html(data);
                    //setTimeout(function () {
                    //    $("#IdLineaProducto").chosen({ disable_search_threshold: 10, no_results_text: "No se encontraron coincidencias con " ,placeholder_text_single: "Seleccione una opción"});
                    //    $("div[class*='chosen-container chosen-container-single']").addClass("form-control");
                    //    var a = $("a[class*='chosen-single']");
                    //    if (a != null) {
                    //        a.css("border", "0");
                    //        a.css("background", "white");
                    //        a.css("box-shadow", "0 0 0 white inset,0 0 0 rgba(0,0,0,.1)");
                    //    }
                    //}, 500);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                }
            });
        }
    })
</script>



