@model Entity.Ciiu

@{
    Layout = "";
}

@using (Html.BeginForm("Create", "Ciiu", FormMethod.Post, new { name = "addform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        <div id="errors-container" class="alert alert-danger animated bounceIn hidden">
            <strong>Alertas</strong>
            <div>
                <ul></ul>
            </div>
        </div>

        @if (Model != null)
        {
            <input type="hidden" name="Id" value="@Model.Id" />
        }

        <div class="form-group">
            <label for="Codigo" class="col-md-4 control-label">C&oacute;digo</label>
            <div class="col-md-7">
                @Html.TextBoxFor(t => t.Codigo, new { @class = "form-control" })
                @*<input class="text-box single-line form-control" id="Nombre" name="Nombre" type="text" value="">*@
                @Html.ValidationMessageFor(model => model.Codigo)
            </div>
            <div class="col-md-1 txt-color-red"><span>(*)</span></div>
        </div>

        <div class="form-group">
            <label for="Nombre" class="col-md-4 control-label">Descripci&oacute;n</label>
            <div class="col-md-7">
                @Html.TextBoxFor(t => t.Nombre, new { @class = "form-control" })
                @*<input class="text-box single-line form-control" id="Nombre" name="Nombre" type="text" value="">*@
                @Html.ValidationMessageFor(model => model.Nombre)
            </div>
            <div class="col-md-1 txt-color-red"><span>(*)</span></div>
        </div>
        <div class="form-group">
            <label for="Revision" class="col-md-4 control-label">Revisi&oacute;n</label>
            <div class="col-md-7">
                @Html.EnumDropDownListFor(t => t.EnumRevision, "Seleccione una revisión", htmlAttributes: new { @class = "form-control" })
                @*@Html.TextBoxFor(t => t.Revision, new { @class = "form-control" })*@
                @*<input class="text-box single-line form-control" id="Nombre" name="Nombre" type="text" value="">*@
                @Html.ValidationMessageFor(model => model.Revision)
            </div>

        </div>
        <div class="form-group">
            <label for="tipoCalculo" class="col-md-4 control-label">Tipo de C&aacute;lculo</label>
            <div class="col-md-7">
                @{Html.RenderAction("GetDorpDown", "MetodoCalculo", new { id = (Model != null && Model.id_metodo_calculo != null) ? Model.id_metodo_calculo : 0, nombre = "id_metodo_calculo", @default = "Seleccione uno" });}

                @Html.ValidationMessageFor(model => model.id_metodo_calculo)
            </div>
            <div class="col-md-1 txt-color-red"><span>(*)</span></div>
        </div>
        @{
            var s1 = Model != null && Model.sub_sector == 1 ? "selected" : "";
            var s2 = Model != null && Model.sub_sector == 2 ? "selected" : "";

            var r1 = Model != null && Model.rubro == 1 ? "selected" : "";
            var r2 = Model != null && Model.rubro == 2 ? "selected" : "";
            var r3 = Model != null && Model.rubro == 3 ? "selected" : "";
            var r4 = Model != null && Model.rubro == 4 ? "selected" : "";
        }
        <div class="form-group">
            <label for="subsector" class="col-md-4 control-label">Sub Sector</label>
            <div class="col-md-7">
                <select id="select-sub-sector" class="form-control chosen" name="sub_sector">
                    <option value="0">Seleccione uno</option>
                    <option @s1 value="1">Manufactura primaria</option>
                    <option @s2 value="2">Manufactura no primaria</option>
                </select>
            </div>
            <div class="col-md-1 txt-color-red"><span>(*)</span></div>
        </div>
        <div class="form-group" id="div-rubro">
            <label for="rubro" class="col-md-4 control-label">Rubro</label>
            <div class="col-md-7">
                <select id="select-rubro" class="form-control chosen" name="rubro">
                    <option value="0">Seleccione uno</option>
                    <option @r1 value="1">Bienes de consumo</option>
                    <option @r2 value="2">Bienes intermedios</option>
                    <option @r3 value="3">Bienes de capital</option>
                    <option @r4 value="4">Servicios</option>
                </select>
            </div>
            <div class="col-md-1 txt-color-red"><span>(*)</span></div>
        </div>
        <div class="form-group">
            <label for="Peso" class="col-md-4 control-label">Peso</label>
            <div class="col-md-7">
                @Html.TextBoxFor(t => t.Peso, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Peso)
            </div>
            <div class="col-md-1 txt-color-red"><span>(*)</span></div>
        </div>
        @*<div class="col-md-12">
        <div class="form-group">
            <label for="ValorAgregado" class="col-md-2 control-label">Valor Agregado</label>
            <div class="col-md-9">
                @Html.TextBoxFor(t => t.ValorAgregado, new { @class = "form-control", style = "width: 106%; max-width: inherit;" })
                @Html.ValidationMessageFor(model => model.ValorAgregado)
            </div>

        </div>
    </div>*@
        <div class="form-group">
            <label for="Activado" class="col-md-4 control-label">Activado</label>
            <div class="col-md-1">
                @Html.CheckBoxFor(t => t.Activado, new { @class = "form-control check-small" })
                @*<input class="text-box single-line form-control" id="Nombre" name="Nombre" type="text" value="">*@
                @Html.ValidationMessageFor(model => model.Activado)
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" name="aceptarbtn" class="btn btn-primary" value="Aceptar">Aceptar</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        var selectSubSector = $("#select-sub-sector");
        $.search(selectSubSector);

        var selectEnumRevision = $("#EnumRevision");
        $.search(selectEnumRevision);

        $("button[name='aceptarbtn']").click(function () {
            var $elem = $(this);
            $elem.addClass("disabled");
            $.ajax({
                cache: false,
                type: "POST",
                url: $.origin() + "/Ciiu/CreatePost/",
                data: $("form[name='addform']").serialize(),
                success: function (data) {
                    $elem.removeClass("disabled");
                    if (data.Success) {
                        $("#table-container").html(data.Data);
                        $("#editItem").modal("hide");
                        $.smallBox({
                            title: "Confirmación",
                            content: "<i class='fa fa-clock-o'></i> <i>El elemento se guardó correctamente</i>",
                            color: "#659265",
                            iconSmall: "fa fa-check fa-2x fadeInRight animated",
                            timeout: 4000
                        });
                    } else {
                        var errors = "";
                        for (var i = 0; i < data.Errors.length; i++) {
                            errors += "<li>" + data.Errors[i] + "</li>";
                        }
                        $("#errors-container").removeClass("hidden").find("ul").html(errors);
                    }
                    //$("#editItem .modal-body").html(data);
                    //$("#editItem").modal("show");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $elem.removeClass("disabled");
                    alert('Failed to retrieve data.');
                }
            });

        });

        $('#Codigo').maxlength({ events: ['blur'], slider: true, maxCharacters: 4, statusText: 'caracteres restantes' });
        $('#Nombre').maxlength({ events: ['blur'], slider: true, maxCharacters: 255, statusText: 'caracteres restantes' });
        //$('#Revision').maxlength({ events: ['blur'], slider: true, maxCharacters: 10, statusText: 'caracteres restantes' });
        verifyRubro();
        //setTimeout(function () {
        //    $("select[name='sub_sector']").chosen({ disable_search_threshold: 10, no_results_text: "No se encontraron coincidencias con ", placeholder_text_single: "Seleccione un elemento" });
        //    $("div[class*='chosen-container chosen-container-single chosen-container-single-nosearch']").addClass("form-control");
        //    var a = $("a[class*='chosen-single']");
        //    if (a != null) {
        //        a.css("border", "0");
        //        a.css("background", "white");
        //        a.css("box-shadow", "0 0 0 white inset,0 0 0 rgba(0,0,0,.1)");
        //    }
        //}, 500);
        $("select[name='sub_sector']").change(function () {
            verifyRubro();

        });

    });

    function verifyRubro() {

        var value = $("select[name='sub_sector']").val();
        if (value == 2) {

            var selectRubro = $("#select-rubro");

            $.search(selectRubro);
            $('#div-rubro').show();
        } else {
            $('#div-rubro').hide();
        }
    }
</script>