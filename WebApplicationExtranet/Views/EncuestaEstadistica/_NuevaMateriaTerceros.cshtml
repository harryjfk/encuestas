@using System.Diagnostics
@model Entity.MateriaTerceros

@using (Html.BeginForm("NuevaMateriaTerceros", "EncuestaEstadistica", FormMethod.Post, new { name = "addformMT" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default">
        <div id="divNuevoContactoBody" class="form-horizontal panel-body" >
            
            <div id="errors-container" class="alert alert-danger animated bounceIn hidden">
                <strong>Alertas</strong>
                <div>
                    <ul></ul>
                </div>
            </div>

            @if (Model != null)
            {
                @Html.HiddenFor(t=>t.Id, new { @id = "IdMT" });
            }
          
            <div class="form-group">
                <label class="col-sm-4 control-label">Producto</label>
                <div class="col-sm-7">
                    @if (Model == null || Model.Id == 0)
                    {
                        <input type="text" id="filterProductoT" class="form-control reset-max-width" placeholder="Filtrado de Producto" />
                    }
                    else
                    {
                        @Html.Label("", Model.LineaProducto.Nombre, new { @class = "form-control" })
                        @Html.HiddenFor(t => t.IdLineaProducto, new { @id = "IdLineaProductotn" })
                    }
                </div>
                <div class="col-md-1 txt-color-red"><span style="margin-left: 30px;">(*)</span></div>
            </div>
            <div class="form-group" style="@(Model == null || Model.Id == 0 ? "" : "display:none")">
                <div class="col-sm-4"></div><div id="mtlineaproductotn" class="col-sm-7"></div>
            </div>
            <div class="form-group">
                <label for="Nombre" class="col-md-4 control-label">CIIU</label>
                <div class="col-md-7">
                    @if (Model == null || Model.Id == 0)
                    {
                        <input type="text" id="ciiuTText" class="form-control reset-max-width" value="" readonly="" />
                        <input type="hidden" id="idCiiuMTN" />
                    }
                    else
                    {
                        @Html.Label("", Model.LineaProducto.Ciiu.Nombre, new { @class = "form-control" })
                    }
                </div>
                <div class="col-md-1 txt-color-red"><span style="margin-left: 30px;">(*)</span></div>
            </div>           
            <div class="form-group">
                <label for="UnidadMedida" class="col-md-4 control-label">Unidad de Medida</label>
                @if (Model == null || Model.Id == 0)
                {
                    <div class="col-md-7" id="mtunidadmedida">
                    </div>
                }
                else
                {
                    <div class="col-md-7">
                        @Html.Label("", Model.UnidadMedida.Abreviatura, new { @class = "form-control" })
                    </div>
                    @Html.HiddenFor(t=>t.IdUnidadMedida, new { @id = "IdUnidadMedida" })
                }
                <div class="col-md-1 txt-color-red"><span style="margin-left: 30px;">(*)</span></div>
            </div>
            <div class="form-group">
                <label for="UnidadProduccion" class="col-md-4 control-label">Producci&oacute;n</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(t=>t.UnidadProduccion, new { @class= "form-control mask4 reset-max-width", @id = "UnidadProduccion" })
                </div>
                <div class="col-md-1 txt-color-red"><span style="margin-left: 30px;">(*)</span></div>
            </div>
            <div class="form-group" id="justNMT" style="@(Model.justificacion_produccion == null || Model.justificacion_produccion == "" ? "display:none" : "")">
                <label for="" class="col-md-4 control-label">Justificación</label>
                <div class="col-md-7">
                    @Html.TextBoxFor(t => t.justificacion_produccion, new { @class = "form-control reset-max-width", @id = "justificacion_produccion" })
                </div>
                <div class="col-md-1 txt-color-red"><span style="margin-left: 30px;">(*)</span></div>
            </div>

            <div class="modal-footer">
                <button type="button" name="aceptarbtnMT" class="btn btn-primary" value="Aceptar">Adicionar</button>
            </div>

        </div>
    </div>
}
@{
    var idLineaProd = (Model != null ? Model.IdLineaProducto : 0);
    var idCiuu=(Model!=null&&Model.LineaProducto!=null?Model.LineaProducto.IdCiiu:0);
    var idUnidadMedida = (Model != null ? Model.IdUnidadMedida:0);
}


<script type="text/javascript">

    $(document).ready(function () {

        maskEstadistico();

        if ($('#IdMT').val() == 0) {
            loadUnidadMedidaT();
        }

        $("button[name='aceptarbtnMT']").click(function (e) {
            e.preventDefault();

            var $elem = $(this);
            $elem.addClass("disabled");
            $.ajax({
                cache: false,
                type: "POST",
                url: $.origin() + "/EncuestaEstadistica/NuevaMateriaTerceros/",
                data: {
                    Id: $('#IdMT').val(),
                    IdLineaProducto : $("#IdLineaProductotn").val(),
                    IdUnidadMedida : $('#IdUnidadMedida').val(),
                    UnidadProduccion: getValueEstadistico('#UnidadProduccion'),
                    justificacion_produccion: $('#justificacion_produccion').val()
                },//$("form[name='addformMT']").serialize(),
                success: function (data) {
                    $elem.removeClass("disabled");
                    if (data.Success) {
                        $("#productosMateriaPrimaTerceros").html(data.Data);
                        $("#cap3").html(data.ValorProduccion);
                        $("#cap4").html(data.Ventas);
                        $.smallBox({
                            title: "Confirmación",
                            content: "<i class='fa fa-clock-o'></i> <i>El elemento se guardó correctamente</i>",
                            color: "#659265",
                            iconSmall: "fa fa-check fa-2x fadeInRight animated",
                            timeout: 4000
                        });
                    } else {
                        var errors = "";
                        for (var i = 0; i < data.Errors.length; i++) {
                            errors += "<li>" + data.Errors[i] + "</li>";
                        }
                        $("#errors-container").removeClass("hidden").find("ul").html(errors);

                        if (data.hasOwnProperty('Invalid')){
                            $('#justNMT').show();
                        }else{
                            $('#justNMT').hide();
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $elem.removeClass("disabled");
                    alert('Failed to retrieve data.');
                }
            });
        });
    
        var timerFilterProductoT, timeOutUserWriteT = 750;

        $('#filterProductoT').keyup(function () {
            if ($(this).val().length >= 3) {
                if (typeof timerFilterProductoT != undefined)
                    clearTimeout(timerFilterProductoT);

                timerFilterProductoT = setTimeout(function () {
                    loadLineaProductoT();
                }, timeOutUserWriteT);
            }
        });

        function loadCiiuByProductoT() {
            if ($('#IdLineaProductotn').val() != '0') {
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: $.origin() + "/EncuestaEstadistica/GetCiiuTextByProducto/",
                    data: {
                        idProducto: $('#IdLineaProductotn').val(),
                    },
                    success: function (data) {
                        $('#ciiuTText').val(data.Codigo + '-' + data.Ciiu);
                        $('#idCiiuMTPN').val(data.IdCiiu);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve data.');
                    }
                });
            }
        }

        function loadLineaProductoT() {
            $.ajax({
                cache: false,
                type: "POST",
                url: $.origin() + "/EncuestaEstadistica/GetDorpDownLineaProductoS/",
                data: {
                    filter: $('#filterProductoT').val(),
                    nombre: "IdLineaProductotn",
                    default: "Seleccione Línea de Producto",
                    mt: true
                },
                success: function (data) {
                    $("#mtlineaproductotn").html(data);
                    $("#IdLineaProductotn").chosen({ disable_search_threshold: 10, no_results_text: "No se encontraron coincidencias con ", placeholder_text_single: "Seleccione Línea de Producto" });
                    $("#IdLineaProductotn").on('change', function () {
                        loadCiiuByProductoT();
                        loadUnidadMedidaT();
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {                    
                    alert('Failed to retrieve data.');
                }
            });
        }
        
        function loadUnidadMedidaT() {            
            $.ajax({
                cache: false,
                type: "POST",
                url: $.origin() + "/EncuestaEstadistica/GetDorpDownUnidadMedida/",
                data: {
                    idLineaProducto: $('#IdLineaProductotn').val() ? $('#IdLineaProductotn').val() : '0',
                    name: "IdUnidadMedida",
                    id: '@idUnidadMedida'
                },
                success: function (data) {
                    $("#mtunidadmedida").html(data);
                    $("#IdUnidadMedida").chosen({ disable_search_threshold: 10, no_results_text: "No se encontraron coincidencias con ", placeholder_text_single: "Seleccione Unidad de Medida" });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                }
            });            
        }
    })
</script>
